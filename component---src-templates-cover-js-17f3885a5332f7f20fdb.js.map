{"version":3,"sources":["webpack:///./src/components/ImageWithText.js","webpack:///./src/templates/cover.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/layouts/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./node_modules/core-js/modules/es6.date.now.js"],"names":["ImageWithText","props","_this","_Component","call","this","handleTextChange","text","_this$canvas$current","canvas","current","width","height","ctx","getContext","clearRect","drawImage","image","font","textAlign","strokeStyle","fillStyle","lineWidth","fillText","strokeText","React","createRef","componentDidMount","_this2","addEventListener","componentDidUpdate","render","react_default","a","createElement","ref","className","src","alt","Component","Cover","state","href","downloadName","setText","setState","handleDownloadClick","toDataURL","Date","now","data","_this$state","id","layouts","lib","xs","ImageWithText_ImageWithText","cover","publicURL","type","value","onChange","e","target","download","onClick","query","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","gatsby__WEBPACK_IMPORTED_MODULE_1__","react_flexbox_grid__WEBPACK_IMPORTED_MODULE_2__","Layout","_ref","to","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","$export","S","getTime"],"mappings":"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","file":"component---src-templates-cover-js-17f3885a5332f7f20fdb.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ImageWithText extends Component {\n  constructor(props) {\n    super(props);\n\n    this.canvas = this.props.canvas;\n    this.image = React.createRef();\n  }\n\n  componentDidMount() {\n    this.image.current.addEventListener('load', () => {\n      const ratio = this.image.current.width / this.image.current.height;\n      const height = 600;\n      const width = height * ratio;\n      this.canvas.current.height = height;\n      this.canvas.current.width = width;\n      this.handleTextChange(this.props.text);\n    });\n  }\n\n  componentDidUpdate() {\n    this.handleTextChange(this.props.text);\n  }\n\n  handleTextChange = (text) => {\n    const { width, height } = this.canvas.current;\n\n    const ctx = this.canvas.current.getContext('2d');\n    ctx.clearRect(0, 0, width, height);\n    ctx.drawImage(this.image.current, 0, 0, width, height);\n\n    ctx.font = 'bold 40px serif';\n    ctx.textAlign = 'center';\n    ctx.strokeStyle = 'black';\n    ctx.fillStyle = 'white';\n    ctx.lineWidth = 1;\n\n    ctx.fillText(text, width / 2, height - 30);\n    ctx.strokeText(text, width / 2, height - 30);\n  }\n\n  render() {\n    return (\n      <div>\n        <canvas ref={this.canvas}/>\n        <img\n          ref={this.image}\n          className=\"hidden\"\n          src={this.props.src} alt=\"baibai\"\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { graphql } from 'gatsby';\nimport { Row, Col } from 'react-flexbox-grid';\n\nimport Layout from '../layouts/index';\nimport ImageWithText from '../components/ImageWithText';\nimport './cover.css';\n\nexport default class Cover extends Component {\n  constructor(props) {\n    super(props);\n\n    this.canvas = React.createRef();\n  }\n\n  state = {\n    text: '',\n    href: '',\n    downloadName: 'baibai',\n  };\n\n  setText = (text) => {\n    this.setState({ text });\n  }\n\n  handleDownloadClick = () => {\n    const href = this.canvas.current.toDataURL(\"image/png\");\n    const now = Date.now();\n    const downloadName = `baibai-${now}.png`;\n\n    this.setState({\n      href,\n      downloadName,\n    })\n  }\n\n  render() {\n    const { data } = this.props;\n    const { text, href, downloadName } = this.state;\n    return (\n      <div id=\"cover\">\n        <Layout>\n          <Row>\n            <Col className=\"center\" xs={12}>\n              <ImageWithText\n                canvas={this.canvas}\n                src={data.cover.publicURL}\n                text={text}\n              />\n            </Col>\n          </Row>\n          <Row className=\"center\">\n            <Col className=\"center\" xs={12}>\n              <input\n                type=\"text\"\n                value={text}\n                onChange={(e) => this.setText(e.target.value)}\n              />\n            </Col>\n          </Row>\n          <Row className=\"center\">\n            <Col xs={12}>\n              <a href={href} download={downloadName}>\n                <button className=\"btn\" onClick={this.handleDownloadClick}>下載</button>\n              </a>\n            </Col>\n          </Row>\n        </Layout>\n      </div>\n    )\n  }\n}\n\nexport const query = graphql`\n  query CoverByid($id: String!){\n    cover: file(id: { eq: $id }) {\n      id\n      publicURL\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport { Grid } from 'react-flexbox-grid';\n\nimport './index.css';\n\nconst Layout = ({ children }) => (\n  <Grid id=\"layout\">\n    <h1><Link to=\"/\">白白圖文產生器</Link></h1>\n    <div>{ children }</div>\n  </Grid>\n);\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// 20.3.3.1 / 15.9.4.4 Date.now()\nvar $export = require('./_export');\n\n$export($export.S, 'Date', { now: function () { return new Date().getTime(); } });\n"],"sourceRoot":""}